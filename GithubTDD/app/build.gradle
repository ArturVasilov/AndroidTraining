apply plugin: 'com.android.application'
apply plugin: 'de.felixschulze.gradle.hockeyapp'

apply from: '../variables.gradle'

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.2"

    packagingOptions {
        exclude 'LICENSE.txt'
        exclude 'META-INF/LICENSE.txt'
    }

    defaultConfig {
        applicationId "com.elegion.android"
        minSdkVersion 15
        targetSdkVersion 23
        versionCode rootProject.versionCode
        versionName rootProject.versionName

        buildConfigField "String", "API_ENDPOINT", '"https://api.github.com/"'
        buildConfigField "String", "CLIENT_ID", clientId
        buildConfigField "String", "CLIENT_SECRET", clientSecret

        buildConfigField "String", "HOCKEY_APP_ID", rootProject.ext.hockeyAppId

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    signingConfigs {
        debug {
            storeFile file('debug.jks')
        }
        release {
            storeFile file(String.valueOf(System.getenv("KEYSTORE")))
            storePassword System.getenv("STOREPASS")
            keyAlias System.getenv("KEYALIAS")
            keyPassword System.getenv("KEYPASS")
        }
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.debug
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    flavorDimensions 'buildType'

    productFlavors {
        development {
            dimension 'buildType'
            signingConfig signingConfigs.release
        }
        production {
            buildConfigField "String", "HOCKEY_APP_ID", '""'
            dimension 'buildType'
        }
    }
}

apply from: '../versions.gradle'

dependencies {
    compile "com.android.support:support-v4:${supportVersion}"
    compile "com.android.support:support-v13:${supportVersion}"
    compile "com.android.support:appcompat-v7:${supportVersion}"
    compile "com.android.support:recyclerview-v7:${supportVersion}"
    compile "com.android.support:design:${supportVersion}"

    compile "droidkit:droidkit:${droidkitVersion}"
    provided "droidkit:droidkit-processor:${droidkitProcessorVersion}"

    compile "com.squareup.okhttp3:okhttp:${okhttpVersion}"
    compile "com.squareup.okhttp3:logging-interceptor:${okhttpVersion}"
    compile "com.squareup.retrofit2:retrofit:${retrofitVersion}"
    compile "com.squareup.retrofit2:converter-gson:${retrofitVersion}"
    compile "com.squareup.retrofit2:adapter-rxjava:${retrofitVersion}"
    compile "io.reactivex:rxandroid:${rxandroidVersion}"
    compile "io.reactivex:rxjava-math:${rxjavamathVersion}"

    compile("com.github.afollestad.material-dialogs:core:${materialDialogsVersion}") {
        transitive = true
    }
    compile "net.danlew:android.joda:${jodaTimeVersion}"

    testCompile "junit:junit:${junitVersion}"
    testCompile("org.robolectric:robolectric:${robolectricVersion}") {
        exclude group: 'commons-logging', module: 'commons-logging'
        exclude group: 'org.apache.httpcomponents', module: 'httpclient'
    }
    testCompile "org.mockito:mockito-core:${mockitoVersion}"
    testCompile "org.powermock:powermock-api-mockito:${powerMockVersion}"
    testCompile "org.powermock:powermock-module-junit4:${powerMockVersion}"

    // UI/Instrumentation testing
    androidTestCompile "com.android.support:support-v4:${supportVersion}"
    androidTestCompile "com.android.support:recyclerview-v7:${supportVersion}"
    androidTestCompile "com.android.support.test.espresso:espresso-core:${espressoVersion}"
    androidTestCompile "com.android.support.test.espresso:espresso-intents:${espressoVersion}"
    androidTestCompile "com.android.support.test.espresso:espresso-contrib:${espressoVersion}"
    androidTestCompile "com.android.support.test:runner:${testRunnerVersion}"
    androidTestCompile "com.android.support.test:rules:${testRunnerVersion}"
}

hockeyapp {
    apiToken = System.getenv("HOCKEY_APP_TOKEN")
    notesType = 1
    notify = 1
    notes = System.getenv("CHANGELOG")
    tags = "test"
}
